{"version":3,"file":"autocomplete.es.js","sources":["autocomplete.ts"],"sourcesContent":["/**\r\n * Copyright (c) 2016 Denis Taran\r\n * \r\n * Homepage: https://smartscheduling.com/en/documentation/autocomplete\r\n * Source: https://github.com/denis-taran/autocomplete\r\n * \r\n * MIT License\r\n */\r\n\r\nexport const enum EventTrigger {\r\n    Keyboard = 0,\r\n    Focus = 1,\r\n    Mouse = 2,\r\n    /**\r\n     * Fetch is triggered manually by calling `fetch` function returned in `AutocompleteResult`\r\n     */\r\n    Manual = 3\r\n}\r\n\r\n/**\r\n * Enum for controlling form submission when `ENTER` key is pressed in the autocomplete input field.\r\n */\r\nexport const enum PreventSubmit {\r\n    Never = 0,\r\n    Always = 1,\r\n    /**\r\n     * Form submission is prevented only when an item is selected from the autocomplete list.\r\n     */\r\n    OnSelect = 2\r\n}\r\n\r\nexport interface AutocompleteItem {\r\n    label?: string;\r\n    group?: string;\r\n}\r\n\r\nexport interface AutocompleteEvent<T extends Event> {\r\n    /**\r\n     * Native event object passed by browser to the event handler\r\n     */\r\n    event: T;\r\n\r\n    /**\r\n     * Fetch data and display autocomplete\r\n     */\r\n    fetch: () => void;\r\n}\r\n\r\nexport interface AutocompleteSettings<T extends AutocompleteItem> {\r\n    /**\r\n     * Autocomplete will be attached to this element.\r\n     */\r\n    input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    /**\r\n     * Provide your own container for the widget.\r\n     * If not specified, a new DIV element will be created.\r\n     */\r\n    container?: HTMLDivElement;\r\n\r\n    /**\r\n     * This method allows you to override the default rendering function for items.\r\n     * It must return a DIV element or undefined to skip rendering.\r\n     */\r\n    render?: (item: T, currentValue: string, index: number) => HTMLDivElement | undefined;\r\n\r\n    /**\r\n     * This method allows you to override the default rendering function for item groups.\r\n     * It must return a DIV element or undefined to skip rendering.\r\n     */\r\n    renderGroup?: (name: string, currentValue: string) => HTMLDivElement | undefined;\r\n\r\n    /**\r\n     * If specified, the autocomplete DOM element will have this class assigned to it.\r\n     */\r\n    className?: string;\r\n\r\n    /**\r\n     * Specify the minimum text length required to show autocomplete.\r\n     */\r\n    minLength?: number;\r\n\r\n    /**\r\n     * The message that will be showed when there are no suggestions that match the entered value.\r\n     */\r\n    emptyMsg?: string;\r\n\r\n    /**\r\n     * This method will be called when user choose an item in autocomplete. The selected item will be passed as the first parameter.\r\n     */\r\n    onSelect: (item: T, input: HTMLInputElement | HTMLTextAreaElement) => void;\r\n\r\n    /**\r\n     * Show autocomplete on focus event. Focus event will ignore the `minLength` property and will always call `fetch`.\r\n     */\r\n    showOnFocus?: boolean;\r\n\r\n    /**\r\n     * This method will be called to prepare suggestions and then pass them to autocomplete.\r\n     * @param {string} text - text in the input field\r\n     * @param {(items: T[] | false) => void} update - a callback function that must be called after suggestions are prepared\r\n     * @param {EventTrigger} trigger - type of the event that triggered the fetch\r\n     * @param {number} cursorPos - position of the cursor in the input field\r\n     */\r\n    fetch: (text: string, update: (items: T[] | false) => void, trigger: EventTrigger, cursorPos: number) => void;\r\n\r\n    /**\r\n     * Enforces that the fetch function will only be called once within the specified time frame (in milliseconds) and\r\n     * delays execution. This prevents flooding your server with AJAX requests.\r\n     */\r\n    debounceWaitMs?: number;\r\n\r\n    /**\r\n     * Callback for additional autocomplete customization\r\n     * @param {HTMLInputElement | HTMLTextAreaElement} input - input box associated with autocomplete\r\n     * @param {ClientRect | DOMRect} inputRect - size of the input box and its position relative to the viewport\r\n     * @param {HTMLDivElement} container - container with suggestions\r\n     * @param {number} maxHeight - max height that can be used by autocomplete\r\n     */\r\n    customize?: (input: HTMLInputElement | HTMLTextAreaElement, inputRect: ClientRect | DOMRect, container: HTMLDivElement, maxHeight: number) => void;\r\n\r\n    /**\r\n     * Controls form submission when the ENTER key is pressed in a input field.\r\n     */\r\n    preventSubmit?: PreventSubmit;\r\n\r\n    /**\r\n     * Prevents the first item in the list from being selected automatically. This option allows you\r\n     * to submit a custom text by pressing ENTER even when autocomplete is displayed.\r\n     */\r\n    disableAutoSelect?: boolean;\r\n\r\n    /**\r\n     * Provide your keyup event handler to display autocomplete when a key is pressed that doesn't modify the content. You can also perform some additional actions.\r\n     */\r\n    keyup?: (e: AutocompleteEvent<KeyboardEvent>) => void;\r\n\r\n    /**\r\n     * Allows to display autocomplete on mouse clicks or perform some additional actions.\r\n     */\r\n    click?: (e: AutocompleteEvent<MouseEvent>) => void;\r\n}\r\n\r\nexport interface AutocompleteResult {\r\n    /**\r\n     * Remove event handlers, DOM elements and ARIA/accessibility attributes created by the widget.\r\n     */\r\n    destroy: () => void;\r\n\r\n    /**\r\n     * This function allows to manually start data fetching and display autocomplete. Note that\r\n     * it does not automatically place focus on the input field, so you may need to do so manually\r\n     * in certain situations.\r\n     */\r\n    fetch: () => void;\r\n\r\n    /**\r\n     * Clear autocomplete state and hide container\r\n     */\r\n    hide: () => void;\r\n\r\n    /**\r\n     * Update autocomplete position\r\n     */\r\n    updatePosition: () => void;\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions\r\n     */\r\n    redraw: () => void;\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions if the element is currently being displayed\r\n     */\r\n    redrawIfDisplayed: () => void;\r\n\r\n}\r\n\r\nexport default function autocomplete<T extends AutocompleteItem>(settings: AutocompleteSettings<T>): AutocompleteResult {\r\n\r\n    // just an alias to minimize JS file size\r\n    const doc = document;\r\n\r\n    const container: HTMLDivElement = settings.container || doc.createElement('div');\r\n    const preventSubmit: PreventSubmit = settings.preventSubmit || PreventSubmit.Never;\r\n\r\n    container.id = container.id || 'autocomplete-' + uid();\r\n    const containerStyle = container.style;\r\n    const debounceWaitMs = settings.debounceWaitMs || 0;\r\n    const disableAutoSelect = settings.disableAutoSelect || false;\r\n    const customContainerParent = container.parentElement;\r\n\r\n    let items: T[] = [];\r\n    let inputValue = '';\r\n    let minLen = 2;\r\n    const showOnFocus = settings.showOnFocus;\r\n    let selected: T | undefined;\r\n    let fetchCounter = 0;\r\n    let debounceTimer: number | undefined;\r\n    let destroyed = false;\r\n\r\n    // Fixes #104: autocomplete selection is broken on Firefox for Android\r\n    let suppressAutocomplete = false;\r\n\r\n    if (settings.minLength !== undefined) {\r\n        minLen = settings.minLength;\r\n    }\r\n\r\n    if (!settings.input) {\r\n        throw new Error('input undefined');\r\n    }\r\n\r\n    const input: HTMLInputElement | HTMLTextAreaElement = settings.input;\r\n\r\n    container.className = [container.className, 'autocomplete', settings.className || ''].join(' ').trim();\r\n    container.setAttribute('role', 'listbox');\r\n\r\n    input.setAttribute('role', 'combobox');\r\n    input.setAttribute('aria-expanded', 'false');\r\n    input.setAttribute('aria-autocomplete', 'list');\r\n    input.setAttribute('aria-controls', container.id);\r\n    input.setAttribute('aria-owns', container.id);\r\n    input.setAttribute('aria-activedescendant', '');\r\n    input.setAttribute('aria-haspopup', 'listbox');\r\n\r\n    // IOS implementation for fixed positioning has many bugs, so we will use absolute positioning\r\n    containerStyle.position = 'absolute';\r\n\r\n    /**\r\n     * Generate a very complex textual ID that greatly reduces the chance of a collision with another ID or text.\r\n     */\r\n    function uid(): string {\r\n        return Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n    }\r\n\r\n    /**\r\n     * Detach the container from DOM\r\n     */\r\n    function detach() {\r\n        const parent = container.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear debouncing timer if assigned\r\n     */\r\n    function clearDebounceTimer() {\r\n        if (debounceTimer) {\r\n            window.clearTimeout(debounceTimer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attach the container to DOM\r\n     */\r\n    function attach() {\r\n        if (!container.parentNode) {\r\n            (customContainerParent || doc.body).appendChild(container);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if container for autocomplete is displayed\r\n     */\r\n    function containerDisplayed(): boolean {\r\n        return !!container.parentNode;\r\n    }\r\n\r\n    /**\r\n     * Clear autocomplete state and hide container\r\n     */\r\n    function clear() {\r\n        // prevent the update call if there are pending AJAX requests\r\n        fetchCounter++;\r\n\r\n        items = [];\r\n        inputValue = '';\r\n        selected = undefined;\r\n        input.setAttribute('aria-activedescendant', '');\r\n        input.setAttribute('aria-expanded', 'false');\r\n        detach();\r\n    }\r\n\r\n    /**\r\n     * Update autocomplete position\r\n     */\r\n    function updatePosition() {\r\n        if (!containerDisplayed()) {\r\n            return;\r\n        }\r\n\r\n        input.setAttribute('aria-expanded', 'true');\r\n\r\n        containerStyle.height = 'auto';\r\n        containerStyle.width = input.offsetWidth + 'px';\r\n\r\n        let maxHeight = 0;\r\n        let inputRect: DOMRect | undefined;\r\n\r\n        function calc() {\r\n            const docEl = doc.documentElement as HTMLElement;\r\n            const clientTop = docEl.clientTop || doc.body.clientTop || 0;\r\n            const clientLeft = docEl.clientLeft || doc.body.clientLeft || 0;\r\n            const scrollTop = window.pageYOffset || docEl.scrollTop;\r\n            const scrollLeft = window.pageXOffset || docEl.scrollLeft;\r\n\r\n            inputRect = input.getBoundingClientRect();\r\n\r\n            const top = inputRect.top + input.offsetHeight + scrollTop - clientTop;\r\n            const left = inputRect.left + scrollLeft - clientLeft;\r\n\r\n            containerStyle.top = top + 'px';\r\n            containerStyle.left = left + 'px';\r\n\r\n            maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);\r\n\r\n            if (maxHeight < 0) {\r\n                maxHeight = 0;\r\n            }\r\n\r\n            containerStyle.top = top + 'px';\r\n            containerStyle.bottom = '';\r\n            containerStyle.left = left + 'px';\r\n            containerStyle.maxHeight = maxHeight + 'px';\r\n        }\r\n\r\n        // the calc method must be called twice, otherwise the calculation may be wrong on resize event (chrome browser)\r\n        calc();\r\n        calc();\r\n\r\n        if (settings.customize && inputRect) {\r\n            settings.customize(input, inputRect, container, maxHeight);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Redraw the autocomplete div element with suggestions\r\n     */\r\n    function update() {\r\n\r\n        container.textContent = '';\r\n        input.setAttribute('aria-activedescendant', '');\r\n\r\n        // function for rendering autocomplete suggestions\r\n        let render = function (item: T, _: string, __: number): HTMLDivElement | undefined {\r\n            const itemElement = doc.createElement('div');\r\n            itemElement.textContent = item.label || '';\r\n            return itemElement;\r\n        };\r\n        if (settings.render) {\r\n            render = settings.render;\r\n        }\r\n\r\n        // function to render autocomplete groups\r\n        let renderGroup = function (groupName: string, _: string): HTMLDivElement | undefined {\r\n            const groupDiv = doc.createElement('div');\r\n            groupDiv.textContent = groupName;\r\n            return groupDiv;\r\n        };\r\n        if (settings.renderGroup) {\r\n            renderGroup = settings.renderGroup;\r\n        }\r\n\r\n        const fragment = doc.createDocumentFragment();\r\n        let prevGroup = uid();\r\n\r\n        items.forEach(function (item: T, index: number): void {\r\n            if (item.group && item.group !== prevGroup) {\r\n                prevGroup = item.group;\r\n                const groupDiv = renderGroup(item.group, inputValue);\r\n                if (groupDiv) {\r\n                    groupDiv.className += ' group';\r\n                    fragment.appendChild(groupDiv);\r\n                }\r\n            }\r\n            const div = render(item, inputValue, index);\r\n            if (div) {\r\n                div.id = `${container.id}_${index}`;\r\n                div.setAttribute('role', 'option');\r\n                div.addEventListener('click', function (ev: MouseEvent): void {\r\n                    suppressAutocomplete = true;\r\n                    try {\r\n                        settings.onSelect(item, input);\r\n                    } finally {\r\n                        suppressAutocomplete = false;\r\n                    }\r\n                    clear();\r\n                    ev.preventDefault();\r\n                    ev.stopPropagation();\r\n                });\r\n                if (item === selected) {\r\n                    div.className += ' selected';\r\n                    div.setAttribute('aria-selected', 'true');\r\n                    input.setAttribute('aria-activedescendant', div.id);\r\n                }\r\n                fragment.appendChild(div);\r\n            }\r\n        });\r\n        container.appendChild(fragment);\r\n        if (items.length < 1) {\r\n            if (settings.emptyMsg) {\r\n                const empty = doc.createElement('div');\r\n                empty.id = `${container.id}_${uid()}`;\r\n                empty.className = 'empty';\r\n                empty.textContent = settings.emptyMsg;\r\n                container.appendChild(empty);\r\n                input.setAttribute('aria-activedescendant', empty.id);\r\n            } else {\r\n                clear();\r\n                return;\r\n            }\r\n        }\r\n\r\n        attach();\r\n        updatePosition();\r\n\r\n        updateScroll();\r\n    }\r\n\r\n    function updateIfDisplayed() {\r\n        if (containerDisplayed()) {\r\n            update();\r\n        }\r\n    }\r\n\r\n    function resizeEventHandler() {\r\n        updateIfDisplayed();\r\n    }\r\n\r\n    function scrollEventHandler(e: Event) {\r\n        if (e.target !== container) {\r\n            updateIfDisplayed();\r\n        } else {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    function inputEventHandler() {\r\n        if (!suppressAutocomplete) {\r\n            fetch(EventTrigger.Keyboard);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Automatically move scroll bar if selected item is not visible\r\n     */\r\n    function updateScroll() {\r\n        const elements = container.getElementsByClassName('selected');\r\n        if (elements.length > 0) {\r\n            let element = elements[0] as HTMLDivElement;\r\n\r\n            // make group visible\r\n            const previous = element.previousElementSibling as HTMLDivElement;\r\n            if (previous && previous.className.indexOf('group') !== -1 && !previous.previousElementSibling) {\r\n                element = previous;\r\n            }\r\n\r\n            if (element.offsetTop < container.scrollTop) {\r\n                container.scrollTop = element.offsetTop;\r\n            } else {\r\n                const selectBottom = element.offsetTop + element.offsetHeight;\r\n                const containerBottom = container.scrollTop + container.offsetHeight;\r\n                if (selectBottom > containerBottom) {\r\n                    container.scrollTop += selectBottom - containerBottom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function selectPreviousSuggestion() {\r\n        const index = items.indexOf(selected!);\r\n\r\n        selected = index === -1\r\n            ? undefined\r\n            : items[(index + items.length - 1) % items.length];\r\n\r\n        updateSelectedSuggestion(index);\r\n    }\r\n\r\n    function selectNextSuggestion() {\r\n        const index = items.indexOf(selected!);\r\n\r\n        selected = items.length < 1\r\n            ? undefined\r\n            : index === -1\r\n                ? items[0]\r\n                : items[(index + 1) % items.length];\r\n\r\n        updateSelectedSuggestion(index);\r\n    }\r\n\r\n    function updateSelectedSuggestion(index: number) {\r\n        if (items.length > 0) {\r\n            unselectSuggestion(index);\r\n            selectSuggestion(items.indexOf(selected!));\r\n            updateScroll();\r\n        }\r\n    }\r\n\r\n    function selectSuggestion(index: number) {\r\n        var element = doc.getElementById(container.id + \"_\" + index);\r\n        if (element) {\r\n            element.classList.add('selected');\r\n            element.setAttribute('aria-selected', 'true');\r\n            input.setAttribute('aria-activedescendant', element.id);\r\n        }\r\n    }\r\n\r\n    function unselectSuggestion(index: number) {\r\n        var element = doc.getElementById(container.id + \"_\" + index);\r\n        if (element) {\r\n            element.classList.remove('selected');\r\n            element.removeAttribute('aria-selected');\r\n            input.removeAttribute('aria-activedescendant');\r\n        }\r\n    }\r\n\r\n    function handleArrowAndEscapeKeys(ev: KeyboardEvent, key: 'ArrowUp' | 'ArrowDown' | 'Escape') {\r\n        const containerIsDisplayed = containerDisplayed();\r\n\r\n        if (key === 'Escape') {\r\n            clear();\r\n        } else {\r\n            if (!containerIsDisplayed || items.length < 1) {\r\n                return;\r\n            }\r\n            key === 'ArrowUp'\r\n                ? selectPreviousSuggestion()\r\n                : selectNextSuggestion();\r\n        }\r\n\r\n        ev.preventDefault();\r\n\r\n        if (containerIsDisplayed) {\r\n            ev.stopPropagation();\r\n        }\r\n    }\r\n\r\n    function handleEnterKey(ev: KeyboardEvent) {\r\n        if (selected) {\r\n            if (preventSubmit === PreventSubmit.OnSelect) {\r\n                ev.preventDefault();\r\n            }\r\n            suppressAutocomplete = true;\r\n            try {\r\n                settings.onSelect(selected, input);\r\n            } finally {\r\n                suppressAutocomplete = false;\r\n            }\r\n            clear();\r\n        }\r\n\r\n        if (preventSubmit === PreventSubmit.Always) {\r\n            ev.preventDefault();\r\n        }\r\n    }\r\n\r\n    function keydownEventHandler(ev: KeyboardEvent) {\r\n        const key = ev.key;\r\n\r\n        switch (key) {\r\n            case 'ArrowUp':\r\n            case 'ArrowDown':\r\n            case 'Escape':\r\n                handleArrowAndEscapeKeys(ev, key);\r\n                break;\r\n            case 'Enter':\r\n                handleEnterKey(ev);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function focusEventHandler() {\r\n        if (showOnFocus) {\r\n            fetch(EventTrigger.Focus);\r\n        }\r\n    }\r\n\r\n    function fetch(trigger: EventTrigger) {\r\n        if (input.value.length >= minLen || trigger === EventTrigger.Focus) {\r\n            clearDebounceTimer();\r\n            debounceTimer = window.setTimeout(\r\n                () => startFetch(input.value, trigger, input.selectionStart || 0),\r\n                trigger === EventTrigger.Keyboard || trigger === EventTrigger.Mouse ? debounceWaitMs : 0);\r\n        } else {\r\n            clear();\r\n        }\r\n    }\r\n\r\n    function startFetch(inputText: string, trigger: EventTrigger, cursorPos: number) {\r\n        if (destroyed) return;\r\n        const savedFetchCounter = ++fetchCounter;\r\n        settings.fetch(inputText, function (elements: T[] | false): void {\r\n            if (fetchCounter === savedFetchCounter && elements) {\r\n                items = elements;\r\n                inputValue = inputText;\r\n                selected = (items.length < 1 || disableAutoSelect) ? undefined : items[0];\r\n                update();\r\n            }\r\n        }, trigger, cursorPos);\r\n    }\r\n\r\n    function keyupEventHandler(e: KeyboardEvent) {\r\n        if (settings.keyup) {\r\n            settings.keyup({\r\n                event: e,\r\n                fetch: () => fetch(EventTrigger.Keyboard)\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!containerDisplayed() && e.key === 'ArrowDown') {\r\n            fetch(EventTrigger.Keyboard);\r\n        }\r\n    }\r\n\r\n    function clickEventHandler(e: MouseEvent) {\r\n        settings.click && settings.click({\r\n            event: e,\r\n            fetch: () => fetch(EventTrigger.Mouse)\r\n        });\r\n    }\r\n\r\n    function blurEventHandler() {\r\n        // when an item is selected by mouse click, the blur event will be initiated before the click event and remove DOM elements,\r\n        // so that the click event will never be triggered. In order to avoid this issue, DOM removal should be delayed.\r\n        setTimeout(() => {\r\n            if (doc.activeElement !== input) {\r\n                clear();\r\n            }\r\n        }, 200);\r\n    }\r\n\r\n    function manualFetch() {\r\n        startFetch(input.value, EventTrigger.Manual, input.selectionStart || 0);\r\n    }\r\n\r\n    /**\r\n     * Fixes #26: on long clicks focus will be lost and onSelect method will not be called\r\n     */\r\n    container.addEventListener('mousedown', function (evt: Event) {\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n    });\r\n\r\n    /**\r\n     * Fixes #30: autocomplete closes when scrollbar is clicked in IE\r\n     * See: https://stackoverflow.com/a/9210267/13172349\r\n     */\r\n    container.addEventListener('focus', () => input.focus());\r\n\r\n    // If the custom autocomplete container is already appended to the DOM during widget initialization, detach it.\r\n    detach();\r\n\r\n    /**\r\n     * This function will remove DOM elements and clear event handlers\r\n     */\r\n    function destroy() {\r\n        input.removeEventListener('focus', focusEventHandler);\r\n        input.removeEventListener('keyup', keyupEventHandler as EventListenerOrEventListenerObject)\r\n        input.removeEventListener('click', clickEventHandler as EventListenerOrEventListenerObject)\r\n        input.removeEventListener('keydown', keydownEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener('input', inputEventHandler as EventListenerOrEventListenerObject);\r\n        input.removeEventListener('blur', blurEventHandler);\r\n        window.removeEventListener('resize', resizeEventHandler);\r\n        doc.removeEventListener('scroll', scrollEventHandler, true);\r\n        input.removeAttribute('role');\r\n        input.removeAttribute('aria-expanded');\r\n        input.removeAttribute('aria-autocomplete');\r\n        input.removeAttribute('aria-controls');\r\n        input.removeAttribute('aria-activedescendant');\r\n        input.removeAttribute('aria-owns');\r\n        input.removeAttribute('aria-haspopup');\r\n        clearDebounceTimer();\r\n        clear();\r\n        destroyed = true;\r\n    }\r\n\r\n    // setup event handlers\r\n    input.addEventListener('keyup', keyupEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener('click', clickEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener('keydown', keydownEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener('input', inputEventHandler as EventListenerOrEventListenerObject);\r\n    input.addEventListener('blur', blurEventHandler);\r\n    input.addEventListener('focus', focusEventHandler);\r\n    window.addEventListener('resize', resizeEventHandler);\r\n    doc.addEventListener('scroll', scrollEventHandler, true);\r\n\r\n    return {\r\n        destroy,\r\n        fetch: manualFetch,\r\n        hide: clear,\r\n        updatePosition,\r\n        redraw: update,\r\n        redrawIfDisplayed: updateIfDisplayed\r\n    };\r\n}\r\n"],"names":[],"mappings":"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"}